# -*- coding: utf-8 -*-
"""18/06a.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DKpbwG4IFzzo1sApOSpOQBx8gVSynhqR
"""

from pylab import plot, arange

x = [0, 1, 2, 3, 4]
y = [1, 3, 7, 9, 15]

plot (x, y)

x = arange(0,4,0.5)#definindo os valores do dominio

y = 2*x

y1 = 6*x

y2 = x**2

plot(x,y,x,y1,x,y2) #Comparação entre graficos !!

x = arange(0, 10, 0.5)

y = 2*x
y1 = 6*x
y2 = x**2

plot(x,y,x,y1,x,y2)

#Interseção quando ambas as "linhas" se encontram

plot(x,y,'^') #Formatação de linhas
plot(x,y1,'+')
plot(x,y2,'*')

#Formatação dos graficos ?

from pylab import xlabel, ylabel, title, grid, axhline, axvline

#definição de dominio

x = arange(-2,4,0.5)

y = 3*x

plot(x,y)
xlabel("Variavel Independente X")
ylabel("Função Y = 3x")
grid(True)
title("Grafico da função Y = 3X")
axhline(y=0, color = 'k')
axvline(x=0, color = 'k')

w = [0,1,2,3,4,5,6,7,8,9]
z = [450, 445,431,408,375,372,279,216,143,61]
plot(w,z,'*')
#aparenta ser uma parabola (função do segundo grau)
#f(x) = ax^2 + bx + c

from sympy import symbols, solve, Eq

a,b = symbols("a, b")
eq1 = Eq(4*a + 2*b + 19)
eq2 = Eq(64*a + 8*b + 307)

solve((eq1, eq2),(a,b))

