# -*- coding: utf-8 -*-
"""20/02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11YpuvtKRp35WCGGVXMSgqth8O2_Xg0h4
"""

from scipy import interpolate
from numpy import polynomial as P
import numpy as np
from scipy import linalg
import matplotlib.pyplot as plt

p1 = P.Polynomial([1, 2, 3])
#P.Polynomial([c,b,a])
p1

p1.roots()
#Descobrir as Raizes do polinomio

p2 = P.Polynomial.fromroots([-1,1])
#Construir o polinomio pelas raizes
p2

p2.roots()

p1.coef

x = np.array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]) #x0, x1...
y = np.array([0.4, 0.6, 1.2, 1.9, 2.7, 3.4, 3.9, 4.2, 4.5, 4.7, 5.8, 4.9, 4.9, 4.9, 4.9, 4.7, 4.6, 4.7, 4.4, 4.2, 4.0, 3.8, 3.5, 3.2, 3, 2.7, 2.3,1.8,1.0])
 #respectivas alturas

deg = len(x)-26
deg

fib = P.Polynomial.fit(x,y,deg)
fib

xi = np.array([0,1,2,3], dtype = 'double')
yi = np.array([1,6,5,-8], dtype = 'double')

import sympy

from sympy import I, pi, oo

a, b, x, y = sympy.symbols("a, b, x, y")
f = sympy.Function("f")(x)
sympy.Function("f")(x)

sympy.integrate(f)

sympy.integrate(sympy.sin(x))

sympy.integrate(sympy.sin(x), (x, a, b))

expr = sympy.sin(x*sympy.exp(y))
sympy.sin(x*sympy.exp(y))

#fazer comparativo entre folha inteira e folha cortada
#calcular area de ambas

#transformar a variavel polinomial fit(polinomial) em sympy
fib_sympy = sympy.Poly(fib.coef, x)
sympy.Poly(fib.coef, x)

#calcule da integral de fib_sympy

fib_integral = sympy.integrate(fib_sympy)
sympy.integrate(fib_sympy)

# Calculate the integral of fib_sympy from x = 0 to x = 28
fib_integral_28 = fib_integral.subs(x, 28)

# Calculate the integral of fib_sympy from x = 0 to x = 0
fib_integral_0 = fib_integral.subs(x, 0)

# Calculate the integral of fib_sympy from x = 28 to x = 0
fib_integral_28_0 = fib_integral_28 - fib_integral_0

# Print the results
print("Integral of fib_sympy from x = 0 to x = 28:", fib_integral_28)
print("Integral of fib_sympy from x = 0 to x = 0:", fib_integral_0)
print("Integral of fib_sympy from x = 28 to x = 0:", fib_integral_28_0)

x_plot = np.arange(1, 29, 1)
y_plot = fib(x_plot)
plt.plot(x_plot, y_plot)
plt.xlabel("x")
plt.ylabel("fib(x)")
plt.title("Plot of the Polynomial fit")
plt.show()

